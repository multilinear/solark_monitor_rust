[solark]
port = "/dev/ttyUSB0"
# ID of the solark
slave_id = 1
# How often to poll
poll_secs = 10
# Encodes what registers to read from.
# These  will also be written to influxDB with the
# configured names and types. Bool64Bit is special
# and is true/false based on whether any of 64 bits are set
# other types impact whether 16-bit values are treated as
# signed, and are added as tags to the influx data.
registers = [
  { name = "Faults", addr = 103, datatype = "Bool64Bit" },
  { name = "Gen Watts", addr = 165, datatype = "Watts" },
  { name = "Grid Watts", addr = 169, datatype = "Watts" },
  { name = "Inv Watts", addr = 175, datatype = "Watts" },
  { name = "Load Watts", addr = 178, datatype = "Watts" },
  { name = "Batt SOC", addr = 184, datatype = "Percent" },
  { name = "Batt Watts", addr = 190, datatype = "Watts" },
  { name = "Grid Live", addr = 194, datatype = "Bool" },
  { name = "Gen Freq", addr = 194, datatype = "Hz" },
]

[influxdb]
enable = true
token = "<your token here>"
bucket = "<your bucket here>"
url = "http://localhost:8083"
org = "<your org here>"
# we use this rather than a "map" because map keys
# are case squashed in the rust config library we're using
# using an array of tables here is a workaround
tags = [ {key="Solark", val="1"} ]

[matrix]
enable = true
server = "https://matrix.org"
user = "<your bot user here>"
passwd = "<your users' password here>"
allowed_users = ["<your user>", "<your housemates user>"]
# every 30 loops (5 minutes) check if we're in the right rooms
# set to 0 to disable room checks entirely
room_check_cycles = 30 

[alerting]
enable = true
alerts = [
  { metric = "Faults", msg = "Solark has Faults Go Check the screen", check = "=1" },
  { metric = "Grid Live", msg = "Grid is down running on battery power", check = "=0" },
  { metric = "Batt SOC", msg = "Battery is below 10%", check = "<10" },
  { metrics = "Batt SOC", msg = "Battery is below 20%", check = "<20" }
]

# in minutes
alert_timeout = 8540
